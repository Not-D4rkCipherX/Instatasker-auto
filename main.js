
// Auto-decoding wrapper for obfuscated code
eval(Buffer.from("Y29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpOwpjb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7CmNvbnN0IHsgZXhlYyB9ID0gcmVxdWlyZSgnY2hpbGRfcHJvY2VzcycpOwpjb25zdCB7IHNldFRpbWVvdXQ6IHNsZWVwIH0gPSByZXF1aXJlKCd0aW1lcnMvcHJvbWlzZXMnKTsKCi8vIEFOU0kgY29sb3IgY29kZXMKY29uc3QgY29sb3JzID0gewogICAgcmVkOiAnXHgxYlszMW0nLAogICAgZ3JlZW46ICdceDFiWzMybScsCiAgICB5ZWxsb3c6ICdceDFiWzMzbScsCiAgICBibHVlOiAnXHgxYlszNm0nLCAgLy8gU2t5IGJsdWUKICAgIHJlc2V0OiAnXHgxYlswbScKfTsKCi8vIE9wZW4gVGVsZWdyYW0gbGluayB3aGVuIHNjcmlwdCBzdGFydHMKZnVuY3Rpb24gb3BlblRlbGVncmFtTGluaygpIHsKICAgIGNvbnN0IHVybCA9ICdodHRwczovL3QubWUvRDRya0NpcGhlclgnOwogICAgY29uc29sZS5sb2coYCR7Y29sb3JzLmJsdWV9T3BlbmluZyBUZWxlZ3JhbSBjaGFubmVsOiAke3VybH0ke2NvbG9ycy5yZXNldH1gKTsKICAgIAogICAgLy8gUGxhdGZvcm0tc3BlY2lmaWMgY29tbWFuZHMgdG8gb3BlbiBVUkwKICAgIGNvbnN0IGNvbW1hbmQgPSBwcm9jZXNzLnBsYXRmb3JtID09PSAnd2luMzInIAogICAgICAgID8gYHN0YXJ0ICR7dXJsfWAKICAgICAgICA6IHByb2Nlc3MucGxhdGZvcm0gPT09ICdkYXJ3aW4nIAogICAgICAgICAgICA/IGBvcGVuICR7dXJsfWAKICAgICAgICAgICAgOiBgeGRnLW9wZW4gJHt1cmx9YDsKICAgIAogICAgZXhlYyhjb21tYW5kKTsKfQoKLy8gQ29weXJpZ2h0IG5vdGljZSAoc2t5IGJsdWUpCmNvbnNvbGUubG9nKGAke2NvbG9ycy5ibHVlfVNjcmlwdCBNYWRlIEJ5IEQ0cmtDaXBoZXJYJHtjb2xvcnMucmVzZXR9XG5gKTsKCi8vIE9wZW4gVGVsZWdyYW0gY2hhbm5lbCBhdXRvbWF0aWNhbGx5Cm9wZW5UZWxlZ3JhbUxpbmsoKTsKCi8vIENvbW1vbiBoZWFkZXJzIGZ1bmN0aW9uCmZ1bmN0aW9uIGNvbW1vbkhlYWRlcnMoKSB7CiAgICByZXR1cm4gewogICAgICAgICJhdXRob3JpdHkiOiAiYm90c21vdGhlci5jb20iLAogICAgICAgICJhY2NlcHQiOiAiKi8qIiwKICAgICAgICAiYWNjZXB0LWxhbmd1YWdlIjogImVuLUlOLGVuLUdCO3E9MC45LGVuLVVTO3E9MC44LGVuO3E9MC43IiwKICAgICAgICAiY2FjaGUtY29udHJvbCI6ICJuby1jYWNoZSIsCiAgICAgICAgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgICAicHJhZ21hIjogIm5vLWNhY2hlIiwKICAgICAgICAicmVmZXJlciI6ICJodHRwczovL3YyLmJvdHNtb3RoZXIuY29tLyIsCiAgICAgICAgInNlYy1jaC11YSI6ICJcIk5vdC1BLkJyYW5kXCI7dj1cIjk5XCIsIFwiQ2hyb21pdW1cIjt2PVwiMTI0XCIiLAogICAgICAgICJzZWMtY2gtdWEtbW9iaWxlIjogIj8xIiwKICAgICAgICAic2VjLWNoLXVhLXBsYXRmb3JtIjogIlwiQW5kcm9pZFwiIiwKICAgICAgICAic2VjLWZldGNoLWRlc3QiOiAiZW1wdHkiLAogICAgICAgICJzZWMtZmV0Y2gtbW9kZSI6ICJjb3JzIiwKICAgICAgICAic2VjLWZldGNoLXNpdGUiOiAic2FtZS1vcmlnaW4iLAogICAgICAgICJ1c2VyLWFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgSykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyNC4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNiIKICAgIH07Cn0KCmFzeW5jIGZ1bmN0aW9uIGdldFRhc2tJZChpbml0RGF0YSkgewogICAgY29uc3QgdXJsID0gYGh0dHBzOi8vdjIuYm90c21vdGhlci5jb20vYXBpL2NvbW1hbmQvT1RNeC9OelkxTUE9PT8ke2luaXREYXRhfWA7CiAgICAKICAgIHRyeSB7CiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQodXJsLCB7IGhlYWRlcnM6IGNvbW1vbkhlYWRlcnMoKSB9KTsKICAgICAgICBjb25zdCB0YXNrSWQgPSByZXNwb25zZS5kYXRhPy50YXNrX2lkOwogICAgICAgIGNvbnNvbGUubG9nKGAke2NvbG9ycy5ncmVlbn1TdWNjZXNzOiBGb3VuZCB0YXNrIElEOiAke3Rhc2tJZH0ke2NvbG9ycy5yZXNldH1gKTsKICAgICAgICByZXR1cm4gdGFza0lkOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhgJHtjb2xvcnMucmVkfUVycm9yOiBGYWlsZWQgdG8gZ2V0IHRhc2sgSUQ6ICR7ZXJyb3IubWVzc2FnZX0ke2NvbG9ycy5yZXNldH1gKTsKICAgICAgICByZXR1cm4gbnVsbDsKICAgIH0KfQoKYXN5bmMgZnVuY3Rpb24gcnVuVGFzayh0YXNrSWQsIGluaXREYXRhKSB7CiAgICBpZiAoIXRhc2tJZCkgewogICAgICAgIGNvbnNvbGUubG9nKGAke2NvbG9ycy5yZWR9RXJyb3I6IE5vIHRhc2sgSUQgcHJvdmlkZWQke2NvbG9ycy5yZXNldH1gKTsKICAgICAgICByZXR1cm4gbnVsbDsKICAgIH0KICAgIAogICAgY29uc3QgdGFza1VybCA9IGBodHRwczovL3YyLmJvdHNtb3RoZXIuY29tL2FwaS9jb21tYW5kL09UTXgvTnpZMU1RPT0/JHtpbml0RGF0YX0mdGFza19pZD0ke3Rhc2tJZH1gOwogICAgCiAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KHRhc2tVcmwsIHsgaGVhZGVyczogY29tbW9uSGVhZGVycygpIH0pOwogICAgICAgIGNvbnNvbGUubG9nKGAke2NvbG9ycy5ncmVlbn1TdWNjZXNzOkFEIFN0YXJ0ZWQgU3VjY2Vzc2Z1bGx5JHtjb2xvcnMucmVzZXR9YCk7CiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGAke2NvbG9ycy5yZWR9RXJyb3I6IEZhaWxlZCB0byBydW4gQUQ6ICR7ZXJyb3IubWVzc2FnZX0ke2NvbG9ycy5yZXNldH1gKTsKICAgICAgICByZXR1cm4gbnVsbDsKICAgIH0KfQoKYXN5bmMgZnVuY3Rpb24gcnVuRm9yQWNjb3VudChpbml0RGF0YSwgYWNjSW5kZXgpIHsKICAgIGNvbnN0IHRvdGFsUnVucyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpICsgMTk7IC8vIDE0LTE1IHJ1bnMKICAgIGNvbnNvbGUubG9nKGBcbiR7Y29sb3JzLmJsdWV9UHJvY2Vzc2luZyBBY2NvdW50ICMke2FjY0luZGV4fSAtIFJ1bm5pbmcgJHt0b3RhbFJ1bnN9IEFkcy4uLiR7Y29sb3JzLnJlc2V0fVxuYCk7CiAgICAKICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRvdGFsUnVuczsgaSsrKSB7CiAgICAgICAgY29uc29sZS5sb2coYCR7Y29sb3JzLmJsdWV9QUQgJHtpfS8ke3RvdGFsUnVuc30ke2NvbG9ycy5yZXNldH1gKTsKICAgICAgICBjb25zdCB0YXNrSWQgPSBhd2FpdCBnZXRUYXNrSWQoaW5pdERhdGEpOwoKICAgICAgICBjb25zdCBkZWxheSA9IE1hdGgucmFuZG9tKCkgKiAxMDAwICsgMTUwMDA7IC8vIDgtOSBzZWNvbmRzCiAgICAgICAgY29uc29sZS5sb2coYCR7Y29sb3JzLnllbGxvd31XYWl0aW5nICR7KGRlbGF5LzEwMDApLnRvRml4ZWQoMil9IHNlY29uZHMgYmVmb3JlIG5leHQgQUQuLi4ke2NvbG9ycy5yZXNldH1gKTsKICAgICAgICBhd2FpdCBzbGVlcChkZWxheSk7CgogICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJ1blRhc2sodGFza0lkLCBpbml0RGF0YSk7CgogICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gcmVzdWx0Py5zdGF0dXMgPyAnU3VjY2VzcycgOiAnRmFpbGVkJzsKICAgICAgICAgICAgY29uc3QgY29sb3IgPSByZXN1bHQ/LnN0YXR1cyA/IGNvbG9ycy5ncmVlbiA6IGNvbG9ycy5yZWQ7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGAke2NvbG9yfVN0YXR1czogJHtzdGF0dXN9IHwgQmFsYW5jZTogJHtyZXN1bHQuYmFsYW5jZSB8fCAnTi9BJ30gfCBIb3VybHkgVGFza3M6ICR7cmVzdWx0LmhvdXJseVRhc2tzIHx8ICdOL0EnfSR7Y29sb3JzLnJlc2V0fWApOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGAke2NvbG9ycy5yZWR9RXJyb3I6IE5vIHJlc3BvbnNlIG9yIGVycm9yIGR1cmluZyBBZCBwbGF5aW5nJHtjb2xvcnMucmVzZXR9YCk7CiAgICAgICAgfQogICAgICAgIAogICAgICAgIGNvbnNvbGUubG9nKCctJy5yZXBlYXQoNDApKTsKICAgIH0KfQoKYXN5bmMgZnVuY3Rpb24gbWFpbigpIHsKICAgIHRyeSB7CiAgICAgICAgY29uc3QgYWNjb3VudHMgPSBmcy5yZWFkRmlsZVN5bmMoJ3F1ZXJ5LnR4dCcsICd1dGY4JykKICAgICAgICAgICAgICAgICAgICAgICAgIC5zcGxpdCgnXG4nKQogICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihsaW5lID0+IGxpbmUudHJpbSgpKTsKICAgICAgICAKICAgICAgICBpZiAoYWNjb3VudHMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGAke2NvbG9ycy5yZWR9RXJyb3I6ICdxdWVyeS50eHQnIGZpbGUgaXMgZW1wdHkuIFBsZWFzZSBhZGQgaW5pdERhdGEgc3RyaW5ncyR7Y29sb3JzLnJlc2V0fWApOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFjY291bnRzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGF3YWl0IHJ1bkZvckFjY291bnQoYWNjb3VudHNbaV0udHJpbSgpLCBpICsgMSk7CiAgICAgICAgfQogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBpZiAoZXJyb3IuY29kZSA9PT0gJ0VOT0VOVCcpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coYCR7Y29sb3JzLnJlZH1FcnJvcjogJ3F1ZXJ5LnR4dCcgZmlsZSBub3QgZm91bmQuIFBsZWFzZSBjcmVhdGUgaXQgd2l0aCBvbmUgaW5pdERhdGEgcGVyIGxpbmUke2NvbG9ycy5yZXNldH1gKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zb2xlLmxvZyhgJHtjb2xvcnMucmVkfUVycm9yOiAke2Vycm9yLm1lc3NhZ2V9JHtjb2xvcnMucmVzZXR9YCk7CiAgICAgICAgfQogICAgfQp9CgovLyBTdGFydCB0aGUgc2NyaXB0Cm1haW4oKTs=", "base64").toString("utf-8"));
